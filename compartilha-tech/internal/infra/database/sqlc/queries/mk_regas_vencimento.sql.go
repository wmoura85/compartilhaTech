// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: mk_regas_vencimento.sql

package queries

import (
	"context"
	"database/sql"
)

const createRegra = `-- name: CreateRegra :exec
INSERT INTO mk_regras_vencimento (
    tipo_regra, descricao, tipo_periodo, dia_vcto, dia_inicio, dia_referencia_telefonia, pre_gerar_prox_mes, inativo
) VALUES (
    $1, $2, $3, $4, $5, $6, $7, $8
) RETURNING codvenc, descricao, tipo, tipo_regra, tipo_periodo, dia_inicio, dia_vcto, pre_gerar_prox_mes, inativo, dia_referencia_telefonia
`

type CreateRegraParams struct {
	TipoRegra              sql.NullInt32
	Descricao              sql.NullString
	TipoPeriodo            sql.NullInt32
	DiaVcto                sql.NullInt32
	DiaInicio              sql.NullInt32
	DiaReferenciaTelefonia sql.NullInt32
	PreGerarProxMes        sql.NullString
	Inativo                sql.NullString
}

func (q *Queries) CreateRegra(ctx context.Context, arg CreateRegraParams) error {
	_, err := q.db.ExecContext(ctx, createRegra,
		arg.TipoRegra,
		arg.Descricao,
		arg.TipoPeriodo,
		arg.DiaVcto,
		arg.DiaInicio,
		arg.DiaReferenciaTelefonia,
		arg.PreGerarProxMes,
		arg.Inativo,
	)
	return err
}

const deleteRegra = `-- name: DeleteRegra :exec
DELETE FROM mk_regras_vencimento
WHERE codvenc = $1
`

func (q *Queries) DeleteRegra(ctx context.Context, codvenc int32) error {
	_, err := q.db.ExecContext(ctx, deleteRegra, codvenc)
	return err
}

const getRegra = `-- name: GetRegra :many
SELECT codvenc, descricao, tipo, tipo_regra, tipo_periodo, dia_inicio, dia_vcto, pre_gerar_prox_mes, inativo, dia_referencia_telefonia FROM mk_regras_vencimento
`

func (q *Queries) GetRegra(ctx context.Context) ([]MkRegrasVencimento, error) {
	rows, err := q.db.QueryContext(ctx, getRegra)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []MkRegrasVencimento
	for rows.Next() {
		var i MkRegrasVencimento
		if err := rows.Scan(
			&i.Codvenc,
			&i.Descricao,
			&i.Tipo,
			&i.TipoRegra,
			&i.TipoPeriodo,
			&i.DiaInicio,
			&i.DiaVcto,
			&i.PreGerarProxMes,
			&i.Inativo,
			&i.DiaReferenciaTelefonia,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const getRegraById = `-- name: GetRegraById :one
SELECT codvenc, descricao, tipo, tipo_regra, tipo_periodo, dia_inicio, dia_vcto, pre_gerar_prox_mes, inativo, dia_referencia_telefonia FROM mk_regras_vencimento
WHERE codvenc = $1
`

func (q *Queries) GetRegraById(ctx context.Context, codvenc int32) (MkRegrasVencimento, error) {
	row := q.db.QueryRowContext(ctx, getRegraById, codvenc)
	var i MkRegrasVencimento
	err := row.Scan(
		&i.Codvenc,
		&i.Descricao,
		&i.Tipo,
		&i.TipoRegra,
		&i.TipoPeriodo,
		&i.DiaInicio,
		&i.DiaVcto,
		&i.PreGerarProxMes,
		&i.Inativo,
		&i.DiaReferenciaTelefonia,
	)
	return i, err
}

const updateRegra = `-- name: UpdateRegra :one
UPDATE mk_regras_vencimento
SET tipo_regra = $2, descricao = $3, tipo_periodo = $4, dia_vcto = $5, dia_inicio = $6,
    dia_referencia_telefonia = $7, pre_gerar_prox_mes = $8, inativo = $9
WHERE codvenc = $1
RETURNING codvenc, descricao, tipo, tipo_regra, tipo_periodo, dia_inicio, dia_vcto, pre_gerar_prox_mes, inativo, dia_referencia_telefonia
`

type UpdateRegraParams struct {
	Codvenc                int32
	TipoRegra              sql.NullInt32
	Descricao              sql.NullString
	TipoPeriodo            sql.NullInt32
	DiaVcto                sql.NullInt32
	DiaInicio              sql.NullInt32
	DiaReferenciaTelefonia sql.NullInt32
	PreGerarProxMes        sql.NullString
	Inativo                sql.NullString
}

func (q *Queries) UpdateRegra(ctx context.Context, arg UpdateRegraParams) (MkRegrasVencimento, error) {
	row := q.db.QueryRowContext(ctx, updateRegra,
		arg.Codvenc,
		arg.TipoRegra,
		arg.Descricao,
		arg.TipoPeriodo,
		arg.DiaVcto,
		arg.DiaInicio,
		arg.DiaReferenciaTelefonia,
		arg.PreGerarProxMes,
		arg.Inativo,
	)
	var i MkRegrasVencimento
	err := row.Scan(
		&i.Codvenc,
		&i.Descricao,
		&i.Tipo,
		&i.TipoRegra,
		&i.TipoPeriodo,
		&i.DiaInicio,
		&i.DiaVcto,
		&i.PreGerarProxMes,
		&i.Inativo,
		&i.DiaReferenciaTelefonia,
	)
	return i, err
}
